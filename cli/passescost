#!/usr/bin/env python3
import argparse
import requests

my_parser = argparse.ArgumentParser(description='returns the amount of money op2_ID owes \
    to op1_ID in a specific period with ids and period provided in the params of the url')
my_parser.add_argument('--op1', metavar='operator_id', type=str, required=True,
                        help='select the station operator')
my_parser.add_argument('--op2', metavar='operator_id', type=str, required=True,
                        help='select the tag operator')
my_parser.add_argument('--datefrom', metavar='YYYYMMDD', type=str, required=True,
                        help='select the starting date')
my_parser.add_argument('--dateto', metavar='YYYYMMDD', type=str, required=True,
                        help='select the ending date')
my_parser.add_argument('--format', metavar='{json|csv}', type=str, required=True,
                        help='select the format type of the output (json or csv)')
args = my_parser.parse_args()

try:    
    url = 'http://127.0.0.1:9103/interoperability/api/PassesCost/' + args.op1 + '/' + args.op2 + '/' + args.datefrom + '/' + args.dateto + '?format=' + args.format
    r = requests.get(url)
    if(r.status_code == 200):
        print('200: Success')
        if args.format == 'json':
            print(r.json())
        elif args.format == 'csv': 
            print(r.text)
    elif(r.status_code == 400):
        print('400: Bad request')
    elif(r.status_code == 402):
        print('402: No data')
    elif(r.status_code == 500):
        print('500: Internal server error')
except Exception as e:
    print(e)